# Здесь я получаю библиотеку для работы с ботом через токен
import telebot as TL
# Здесь я импортирую messagebox для создание окна с сообщением
from PyQt5.QtWidgets import QMessageBox
# здесь библиотеку для работы с окнами
import PyQt5
# Здесь для работы с системой
import sys
# Здесь для работы с окнами, но с этой библиотекой некоторые вещи будут
# реализововатся по проще
from tkinter import *
# Здесь из библиотеки pyautogui импортирую функция скриншота
from pyautogui import screenshot
import config

# token = input("введите токен бота: ")


def vopros(mess, msg):  # Здесь я объявляю новую функцию
    # Здесь объявляю функцию в функции, которая будет отвечать
    # за нажатие кнопки "отправить"
    def ok_btn(entr,msg,root):
        msg = msg
        root = root
        msg("ответ: "+entr.get())
        root.destroy()
    # Создаю окно tkinter для вопроса
    root = Tk()
    # задаю этому окну размер
    root.geometry("200x200")
    # присваиваю аттрибуты, в том числе что окно будет в полном экране
    root.attributes("-fullscreen", True)
    # вызываю функцию lift, она выставит окно поверх дургих
    root.lift()
    # создаю надпись, и помещаю в нее вопрос который мы написали в телеграм
    lab = Label(root, text=mess)
    # создаю поле ввода
    entr = Entry(root)
    # создаю кнопку "Отправить", и присваиваю ей функцию "ok_btn", также
    # передав в нее параметры: поле ввода, функцию отправки сообщение,
    # окно вопроса
    btn_ok = Button(text="Ответить", command=lambda: ok_btn(entr, msg, root))
    lab.pack()  # выставляю надпись
    entr.pack()  # выставляю поле ввода
    btn_ok.pack()  # выставляю кнопку "отправить"
    root.mainloop()  # и зацикливаю окно


def msg_mean(mess):# Создаю функцию сообщение пользователя на ПК
    newApp = PyQt5.QtWidgets.QApplication(sys.argv)#создаю новое приложение на PyQt5
    msg = QMessageBox()#Создаю окно для сообщения
    msg.setWindowTitle("сообщение")#Присваиваю окну с сообщением название
    msg.setText(mess)#присваиваю содержание этого окна, мы его написали боту
    msg.setIcon(QMessageBox.Critical)#Выставляю иконку для окна сообщения
    x = msg.exec_()#запускаю окно


bot = TL.TeleBot(config.TOKEN)


# унаследую элементы класса bot в функцию
@bot.message_handler(commands=['start'])
# И эта функция отвечает за самое начало работы бота
# когда мы его находим в телеграм, мы нажимаем кнопку start
# и бот начинает работать
def start_message(message):
    # и  отправляет сообщение "привет началось"
    bot.send_message(message.chat.id, 'Привет, началось :)')


# унаследую элементы класса bot в функцию
@bot.message_handler(content_types=['text'])
def send_text(message):  # этот метод вызывается телеграмом (библиотекой) всякий раз когда приходит нам сообщение
    def msg(message_text):  # эта функция для отправки сообщение боту
        bot.send_message(message.chat.id, str(message_text))  # тут берем id пользователя кторый нам написал, и отправляем ему текст который мы передали ему в функцию
    def snd_doc(name_doc):  # эта функция похожа на "msg", но отправляет не текст а документ(в нашем случае мы будем отправлять картинку)
        bot.send_document(message.chat.id, open(name_doc, "rb"))
    if message.text[:6] == "вопрос":  # Здесь проверяю написал ли человек боту слово начинающиеся на "вопрос", если да то делаем окно вопроса
        vopros(message.text,msg)  # Вызываем функцию вопроса которую мы описали выше в коде
    else:#в остальных случаях
        if message.text == "s":  # если человек боту написал "s"
            screen = screenshot('s.jpg')#то делаем скриншот
            snd_doc("s.jpg")#и отправляем его с помощью функции "snd_doc"
        else:  # аи если же он не написал "s" и не написал "вопрос", значит вывод сообщение на экран
            msg_mean(message.text)#Вызываем функцию сообщение которую мы описали выше в коде


while True:#Здесь делаем бесконечный цикл для запуска бота
    try:
        bot.polling()#здесь запускаем бота
    except(BaseException):
        pass#и игнорируем все ошибки
    #запустили мы бота в цикле потому что бывает он слетает
    #а цикл и игнор ошибки его возобновляет